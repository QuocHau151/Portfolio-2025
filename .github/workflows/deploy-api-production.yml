name: API CI Pipeline

on:
  push:
    branches: ["main"]
    paths:
      - "api/**"
      - ".github/workflows/deploy-api-production.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "api/**"
permissions:
  contents: write
env:
  REGISTRY: docker.io
  IMAGE_NAME: quochau151/api_portfolio

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file
        working-directory: ./api
        run: |
          echo "${{ secrets.API_ENV_PRODUCTION }}" > .env

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Update Kubernetes manifests
      #   run: |
      #     SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
      #     IMAGE_FULL="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-${SHORT_SHA}"
      #       if [ -f api/manifests/deployment.yaml ]; then
      #         sed -i "s|image: .*|image: ${IMAGE_FULL}|g" api/manifests/deployment.yaml
      #       else
      #          echo "Warning: api/manifests/deployment.yaml khÃ´ng tá»“n táº¡i."
      #       fi
      #           echo "Updated image to: ${IMAGE_FULL}"

      # - name: Commit and push changes to Git repository
      #   run: |
      #     git config --global user.email "tranlequochau.blc@gmail.com"
      #     git config --global user.name "Quochau151"
      #     git add api/manifests/deployment.yaml
      #     if git diff --staged --quiet; then
      #       echo "No changes to commit"
      #     else
      #       git commit -m "ðŸš€ Update deployment image to ${{ github.sha }}"
      #       git pull --rebase origin main
      #       git push
      #     fi

# name: Deploy API Production
# on:
#   push:
#     branches: ["main"]
#     paths:
#       - "api/**"
#       - ".github/workflows/deploy-api-production.yml"
#   pull_request:
#     branches: ["main"]
#     paths:
#       - "api/**"

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Create .env file
#         working-directory: ./api
#         run: |
#           echo "${{ secrets.API_ENV_PRODUCTION }}" > .env

#       - name: Build Docker Image
#         working-directory: ./api
#         run: |
#           docker build --platform linux/x86_64 -t quochau151/api_portfolio .

#       - name: Login to Docker Hub
#         run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Push Docker Image
#         working-directory: ./api
#         run: docker push quochau151/api_portfolio

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Executing remote ssh commands using password
#         uses: appleboy/ssh-action@v1.2.0
#         with:
#           host: ${{ secrets.HOST_PRODUCTION }}
#           username: ${{ secrets.USERNAME_PRODUCTION }}
#           password: ${{ secrets.PASSWORD_PRODUCTION }}
#           port: ${{ secrets.PORT_PRODUCTION }}
#           script: |
#             docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
#             docker pull quochau151/api_portfolio
#             docker stop api_portfolio
#             docker rm api_portfolio
#             docker run -dp 9011:4000 --name api_portfolio  quochau151/api_portfolio
#             docker image prune -f
